const functions = require("firebase-functions");
const twilio = require('twilio');
const moment = require('moment');

const {
    getHorarios,
    setHorario,
    getHorariosByPhone,
    deleteNotConfirmedByPhone,
    confirmByPhone
} = require('./services/MessageService.js')

const { formatMessage } = require('./utils/formatMessage.js')

exports.message = functions.https.onRequest(async (req, res) => {

    var { Body: msg, From: fromNumber } = req.body;

    msg = msg.toLowerCase()

    const isSchedule = msg.includes('√†s') || msg.includes('as') || msg.includes('hoje') || msg.includes('amanh√£') || msg.includes('amanha') || msg.includes('dia') || msg.includes('h ') || msg.includes(':')

    const twiml = new twilio.twiml.MessagingResponse();

    switch (msg) {
        case '1':
            twiml.message('Digite o *servi√ßo* que deseja juntamente com o *dia* e *hor√°rio*:\n\n_*Exemplos*_:\n\n_Corte de cabelo hoje √†s 15h_\n_Corte de cabelo dia 15/09 √†s 10:00_');
            break;


        case '2':
            const horarios = await getHorariosByPhone(fromNumber)

            let message = '_Lista de hor√°rios agendados:_\n\n'

            console.log(horarios)

            if (horarios.length > 0) {
                horarios.forEach(horario => {
                    message += `*Servi√ßo*: ${horario.servico}\n*Data*: ${horario.data}\n*Hor√°rio*: ${horario.horario}`
                })

                twiml.message(message)
            } else {
                twiml.message('Voc√™ n√£o tem nenhum hor√°rio agendado.');
            }

            break;


        case 'sim':
            await confirmByPhone(fromNumber)
            twiml.message('Seu agendamento foi efetuado com sucesso!');
            break;


        case 'nao':
        case 'n√£o':
            await deleteNotConfirmedByPhone(fromNumber)
            twiml.message('Seu agendamento foi cancelado.');


        default:
            if (isSchedule) {

                const msgObj = formatMessage(msg)
                console.log(msgObj)
                const horarios = await getHorarios()
                console.log(`${msgObj.data} ${msgObj.horario}`)

                let isBefore = moment(`${msgObj.data} ${msgObj.horario}`, 'DD-MM-YYYY HH:mm').isBefore(moment().subtract(3, 'hours'))
                console.log(moment().format('DD-MM-YYYY HH:mm'))
                let isValid = moment(`${msgObj.data} ${msgObj.horario}`, 'DD-MM-YYYY HH:mm').isValid()

                if (isBefore) {
                    twiml.message('N√£o √© poss√≠vel agendar para um hor√°rio que j√° passou.');
                    break;
                }

                if (!isValid) {
                    twiml.message('Data ou hor√°rio inv√°lido.');
                    break;
                }

                if (horarios[msgObj.data]?.[msgObj.horario]) {
                    twiml.message('Hor√°rio indispon√≠vel, escolha outro hor√°rio.');
                    break
                }

                await setHorario({
                    ...msgObj,
                    confirmado: false,
                    telefone: fromNumber
                })

                twiml.message("Voc√™ deseja agendar o servi√ßo de *" + msgObj.servico + "* para o dia *" + msgObj.data.replaceAll('/', '-') + "* √†s *" + msgObj.horario + "*?\n\nResponda com *sim* ou *n√£o*");



            } else {
                twiml.message("Seja bem vindo √† barbearia Araraquara!üíá‚Äç‚ôÇÔ∏è\n\nSelecione uma das op√ß√µes:\n\n[1] Fazer agendamento ‚è∞\n[2] Ver seus agendamentos üë§");
                //üîé 
            }

            break;
    }

    res.writeHead(200, { 'Content-Type': 'text/xml' });
    res.end(twiml.toString())
});
